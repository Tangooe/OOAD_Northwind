// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using OOAD_Northwind.Models;
using System;

namespace OOAD_Northwind.Migrations
{
    [DbContext(typeof(NorthwindContext))]
    partial class NorthwindContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OOAD_Northwind.Models.Accountabilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("PartyA");

                    b.Property<int>("PartyB");

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("PartyA");

                    b.HasIndex("PartyB");

                    b.HasIndex("Type");

                    b.ToTable("Accountabilities");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.AccountabilityTypes", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("TypeName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("AccountabilityTypes");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.Categories", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategoryID");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("image");

                    b.HasKey("CategoryId");

                    b.HasIndex("CategoryName")
                        .HasName("CategoryName");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.ConversionRatio", b =>
                {
                    b.Property<int>("ConversionRatioId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FromUnitId");

                    b.Property<decimal>("Ratio");

                    b.Property<int>("ToUnitId");

                    b.HasKey("ConversionRatioId");

                    b.HasIndex("FromUnitId");

                    b.HasIndex("ToUnitId");

                    b.ToTable("ConversionRatios");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.OrderDetails", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnName("OrderID");

                    b.Property<int>("ProductId")
                        .HasColumnName("ProductID");

                    b.Property<float>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<short>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("QuantityId")
                        .HasColumnName("QuantityID");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("OrderId")
                        .HasName("OrdersOrder_Details");

                    b.HasIndex("ProductId")
                        .HasName("ProductsOrder_Details");

                    b.HasIndex("QuantityId");

                    b.ToTable("Order Details");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderID");

                    b.Property<string>("CustomerId")
                        .HasColumnName("CustomerID")
                        .HasColumnType("nchar(5)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeID");

                    b.Property<decimal?>("Freight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ShipAddress")
                        .HasMaxLength(60);

                    b.Property<string>("ShipCity")
                        .HasMaxLength(15);

                    b.Property<string>("ShipCountry")
                        .HasMaxLength(15);

                    b.Property<string>("ShipName")
                        .HasMaxLength(40);

                    b.Property<string>("ShipPostalCode")
                        .HasMaxLength(10);

                    b.Property<string>("ShipRegion")
                        .HasMaxLength(15);

                    b.Property<int?>("ShipVia");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId")
                        .HasName("CustomersOrders");

                    b.HasIndex("EmployeeId")
                        .HasName("EmployeesOrders");

                    b.HasIndex("OrderDate")
                        .HasName("OrderDate");

                    b.HasIndex("ShipPostalCode")
                        .HasName("ShipPostalCode");

                    b.HasIndex("ShipVia")
                        .HasName("ShippersOrders");

                    b.HasIndex("ShippedDate")
                        .HasName("ShippedDate");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.Parties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("Type");

                    b.HasKey("Id");

                    b.HasIndex("Type");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.PartyTypes", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("TypeName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("PartyTypes");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductID");

                    b.Property<int?>("CategoryId")
                        .HasColumnName("CategoryID");

                    b.Property<bool?>("Discontinued")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("QuantityPerUnit")
                        .HasMaxLength(20);

                    b.Property<short?>("ReorderLevel")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("SupplierId")
                        .HasColumnName("SupplierID");

                    b.Property<decimal?>("UnitPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<short?>("UnitsInStock")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<short?>("UnitsOnOrder")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId")
                        .HasName("CategoryID");

                    b.HasIndex("ProductName")
                        .HasName("ProductName");

                    b.HasIndex("SupplierId")
                        .HasName("SuppliersProducts");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.Quantities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int?>("UnitId");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Quantities");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .HasColumnName("RegionID");

                    b.Property<string>("RegionDescription")
                        .IsRequired()
                        .HasColumnType("nchar(50)");

                    b.HasKey("RegionId");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.Territories", b =>
                {
                    b.Property<string>("TerritoryId")
                        .HasColumnName("TerritoryID")
                        .HasMaxLength(20);

                    b.Property<int>("RegionId")
                        .HasColumnName("RegionID");

                    b.Property<string>("TerritoryDescription")
                        .IsRequired()
                        .HasColumnType("nchar(50)");

                    b.HasKey("TerritoryId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("RegionId");

                    b.ToTable("Territories");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.Units", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.Accountabilities", b =>
                {
                    b.HasOne("OOAD_Northwind.Models.Parties", "PartyANavigation")
                        .WithMany("AccountabilitiesPartyANavigation")
                        .HasForeignKey("PartyA")
                        .HasConstraintName("FK_Accountabilities_PartyA");

                    b.HasOne("OOAD_Northwind.Models.Parties", "PartyBNavigation")
                        .WithMany("AccountabilitiesPartyBNavigation")
                        .HasForeignKey("PartyB")
                        .HasConstraintName("FK_Accountabilities_PartyB");

                    b.HasOne("OOAD_Northwind.Models.AccountabilityTypes", "TypeNavigation")
                        .WithMany("Accountabilities")
                        .HasForeignKey("Type")
                        .HasConstraintName("FK_Accountabilities_Type");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.ConversionRatio", b =>
                {
                    b.HasOne("OOAD_Northwind.Models.Units", "FromUnit")
                        .WithMany()
                        .HasForeignKey("FromUnitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OOAD_Northwind.Models.Units", "ToUnit")
                        .WithMany()
                        .HasForeignKey("ToUnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OOAD_Northwind.Models.OrderDetails", b =>
                {
                    b.HasOne("OOAD_Northwind.Models.Orders", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_Order_Details_Orders");

                    b.HasOne("OOAD_Northwind.Models.Products", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Order_Details_Products");

                    b.HasOne("OOAD_Northwind.Models.Quantities", "QuantityNavigation")
                        .WithMany("OrderDetails")
                        .HasForeignKey("QuantityId")
                        .HasConstraintName("FK_Order_Details_Quantities");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.Parties", b =>
                {
                    b.HasOne("OOAD_Northwind.Models.PartyTypes", "TypeNavigation")
                        .WithMany("Parties")
                        .HasForeignKey("Type")
                        .HasConstraintName("FK_Parties_PartyTypes");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.Products", b =>
                {
                    b.HasOne("OOAD_Northwind.Models.Categories", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Products_Categories");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.Quantities", b =>
                {
                    b.HasOne("OOAD_Northwind.Models.Units", "Unit")
                        .WithMany("Quantities")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_Quantities_Units");
                });

            modelBuilder.Entity("OOAD_Northwind.Models.Territories", b =>
                {
                    b.HasOne("OOAD_Northwind.Models.Region", "Region")
                        .WithMany("Territories")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("FK_Territories_Region");
                });
#pragma warning restore 612, 618
        }
    }
}
